"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8814],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),d=n,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||s;return r?a.createElement(f,i(i({ref:t},p),{},{components:r})):a.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:n,i[1]=o;for(var c=2;c<s;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},99202:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var a=r(87462),n=r(63366),s=(r(67294),r(3905)),i=["components"],o={id:"best-practices",title:"Production Best Practices"},l=void 0,c={unversionedId:"best-practices",id:"best-practices",title:"Production Best Practices",description:"Performance and Reliability",source:"@site/../docs/best-practices.md",sourceDirName:".",slug:"/best-practices",permalink:"/node_comit/docs/best-practices",draft:!1,editUrl:"https://github.com/prma85/node_comit/edit/master/../docs/best-practices.md",tags:[],version:"current",lastUpdatedBy:"Paulo Andrade",lastUpdatedAt:1580851092,formattedLastUpdatedAt:"Feb 4, 2020",frontMatter:{id:"best-practices",title:"Production Best Practices"}},p={},u=[{value:"Performance and Reliability",id:"performance-and-reliability",level:2},{value:"Security",id:"security",level:2},{value:"Website security threats",id:"website-security-threats",level:3},{value:"Resources",id:"resources",level:2}],m={toc:u},d="wrapper";function f(e){var t=e.components,r=(0,n.Z)(e,i);return(0,s.kt)(d,(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"performance-and-reliability"},"Performance and Reliability"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Use gzip compression")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Use the ",(0,s.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/compression"},"compression")," middleware for gzip compression in your Express app. For example:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const compression = require("compression");\nconst express = require("express");\nconst app = express();\napp.use(compression());\n'))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Don\u2019t use synchronous functions")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Handle exceptions properly")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"To ensure you handle all exceptions, use the following techniques:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://expressjs.com/en/advanced/best-practice-performance.html#use-try-catch"},"Use try-catch"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-js"},'app.get("/search", function(req, res) {\n  // Simulating async operation\n  setImmediate(function() {\n    const jsonStr = req.query.params;\n    try {\n      const jsonObj = JSON.parse(jsonStr);\n      res.send("Success");\n    } catch (e) {\n      res.status(400).send("Invalid JSON string");\n    }\n  });\n});\n'))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://expressjs.com/en/advanced/best-practice-performance.html#use-promises"},"Use promises"))),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-js"},'app.get("/", function(req, res, next) {\n  // do some sync stuff\n  queryDb()\n    .then(function(data) {\n      // handle data\n      return makeCsv(data);\n    })\n    .then(function(csv) {\n      // handle csv\n    })\n    .catch(next);\n});\n\napp.use(function(err, req, res, next) {\n  // handle error\n});\n'))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Setting NODE_ENV to \u201cproduction\u201d makes Express:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Cache view templates."),(0,s.kt)("li",{parentName:"ul"},"Cache CSS files generated from CSS extensions."),(0,s.kt)("li",{parentName:"ul"},"Generate less verbose error messages."))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Ensure your app automatically restarts")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Run your app in a cluster")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Cache request results")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Use a load balancer")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Use a reverse proxy"))),(0,s.kt)("h2",{id:"security"},"Security"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Security best practices for Express applications in production include:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Don\u2019t use deprecated or vulnerable versions of Express"),(0,s.kt)("li",{parentName:"ul"},"Use TLS"),(0,s.kt)("li",{parentName:"ul"},"Use Helmet"),(0,s.kt)("li",{parentName:"ul"},"Use cookies securely"),(0,s.kt)("li",{parentName:"ul"},"Prevent brute-force attacks against authorization"),(0,s.kt)("li",{parentName:"ul"},"Ensure your dependencies are secure"),(0,s.kt)("li",{parentName:"ul"},"Avoid other known vulnerabilities"),(0,s.kt)("li",{parentName:"ul"},"Additional considerations")))),(0,s.kt)("h3",{id:"website-security-threats"},"Website security threats"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Cross-Site Scripting (XSS)")," is a class of attacks that allow an attacker to inject client-side scripts through the website into the browsers of other users"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"SQL injection")," enables malicious users to execute arbitrary SQL code on a database, allowing data to be accessed, modified, or deleted irrespective of the user's permissions"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Cross-Site Request Forgery (CSRF)")," attacks allow a malicious user to execute actions using the credentials of another user without that user\u2019s knowledge or consent"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Glossary/Distributed_Denial_of_Service"},"Denial of Service (DoS)")," is usually achieved by flooding a target site with fake requests so that access to a site is disrupted for legitimate users.")),(0,s.kt)("h2",{id:"resources"},"Resources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://expressjs.com/en/advanced/best-practice-performance.html"},"Production best practices: performance and reliability")," (Express docs)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://expressjs.com/en/advanced/best-practice-security.html"},"Production Best Practices: Security")," (Express docs)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Website_security"},"Website Security")," (Mozilla docs)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.cloudflare.com/learning/security/threats/owasp-top-10/"},"OWASP Top 10 2017")," (Cloudflare docs)")))}f.isMDXComponent=!0}}]);